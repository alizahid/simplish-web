import { TCssProp } from '@stitches/react'
import React, { FunctionComponent } from 'react'

import { styled } from '../stitches.config'
import { useAuth } from '../store'

const Svg = styled('svg', {
  transition: '$smooth',

  variants: {
    size: {
      small: {
        height: '$icon',
        width: '$icon'
      }
    }
  }
})

interface Props {
  color?: string
  icon: 'add' | 'check' | 'cross' | 'remove' | 'moon' | 'sun'
  size?: 'small'
  css?: TCssProp<never>

  onClick?: () => void
}

const getIcon = (icon: Props['icon']) => {
  switch (icon) {
    case 'add':
      return (
        <path d="m20 11h-7v-7c0-.552-.448-1-1-1s-1 .448-1 1v7h-7c-.552 0-1 .448-1 1s.448 1 1 1h7v7c0 .552.448 1 1 1s1-.448 1-1v-7h7c.552 0 1-.448 1-1s-.448-1-1-1z" />
      )

    case 'check':
      return (
        <path d="m19.980469 5.9902344a1.0001 1.0001 0 0 0 -.6875.3027344l-10.292969 10.2929692-3.2929688-3.292969a1.0001 1.0001 0 1 0 -1.4140624 1.414062l4 4a1.0001 1.0001 0 0 0 1.4140624 0l10.9999998-10.9999998a1.0001 1.0001 0 0 0 -.726562-1.7167968z" />
      )

    case 'cross':
      return (
        <path d="m4.9902344 3.9902344a1.0001 1.0001 0 0 0 -.6972656 1.7167968l6.2929692 6.2929688-6.2929692 6.292969a1.0001 1.0001 0 1 0 1.4140624 1.414062l6.2929688-6.292969 6.292969 6.292969a1.0001 1.0001 0 1 0 1.414062-1.414062l-6.292969-6.292969 6.292969-6.2929688a1.0001 1.0001 0 0 0 -.726562-1.7167968 1.0001 1.0001 0 0 0 -.6875.3027344l-6.292969 6.2929692-6.2929688-6.2929692a1.0001 1.0001 0 0 0 -.7167968-.3027344z" />
      )

    case 'remove':
      return (
        <path d="m10.806641 2c-.517 0-1.0109535.2043125-1.3769535.5703125l-.4296875.4296875h-5a1.0001 1.0001 0 1 0 0 2h16a1.0001 1.0001 0 1 0 0-2h-5l-.429688-.4296875c-.365-.366-.859953-.5703125-1.376953-.5703125zm-6.4414066 5 1.5273437 13.263672c.132.99.9844219 1.736328 1.9824219 1.736328h8.248047c.998 0 1.851375-.745141 1.984375-1.744141l1.527344-13.255859z" />
      )

    case 'moon':
      return (
        <path d="m3.722 3.193-.496 1.335c-.12.323-.375.578-.698.698l-1.335.496c-.257.096-.257.46 0 .555l1.335.496c.323.12.578.375.698.698l.496 1.335c.096.257.46.257.555 0l.496-1.335c.12-.323.375-.578.698-.698l1.335-.496c.257-.096.257-.46 0-.555l-1.334-.496c-.323-.12-.578-.375-.698-.698l-.496-1.335c-.096-.257-.46-.257-.556 0zm17.194 9.801c.603.006 1.091.516 1.008 1.113-.232 1.662-.986 3.267-2.263 4.553-3.13 3.12-8.19 3.12-11.32 0-3.12-3.13-3.12-8.19 0-11.32 1.285-1.277 2.891-2.032 4.553-2.263.596-.084 1.106.404 1.112 1.007.017 1.765.7 3.521 2.044 4.866 1.344 1.344 3.101 2.027 4.866 2.044z" />
      )

    case 'sun':
      return (
        <path d="m12 0c-.6 0-1 .4-1 1v1c0 .6.4 1 1 1s1-.4 1-1v-1c0-.6-.4-1-1-1zm-7.8007812 3.1992188c-.25-.0000001-.4992188.1007812-.6992188.3007812-.4.4-.4 1.0003906 0 1.4003906l.6992188.6992188c.3999999.4 1.0003906.4 1.4003906 0s.4-1.0003906 0-1.4003906l-.6992188-.6992188c-.2-.2-.4511718-.3007812-.7011718-.3007812zm15.6015622 0c-.25 0-.501172.1007812-.701172.3007812l-.699218.6992188c-.4.3999999-.4 1.0003906 0 1.4003906s1.00039.4 1.40039 0l.699219-.6992188c.4-.4.4-1.0003906 0-1.4003906-.2-.2-.449219-.3007812-.699219-.3007812zm-7.800781 1.8007812a7 7 0 0 0 -7 7 7 7 0 0 0 7 7 7 7 0 0 0 7-7 7 7 0 0 0 -7-7zm-11 6c-.6 0-1 .4-1 1s.4 1 1 1h1c.6 0 1-.4 1-1s-.4-1-1-1zm21 0c-.6 0-1 .4-1 1s.4 1 1 1h1c.6 0 1-.4 1-1s-.4-1-1-1zm-17.0996094 7.099609c-.25 0-.5011718.100782-.7011718.300782l-.6992188.699218c-.4.4-.4 1.000391 0 1.400391s1.0003906.4 1.4003906 0l.6992188-.699219c.4-.4.4-1.00039 0-1.40039-.2-.2-.4492188-.300782-.6992188-.300782zm14.1992184 0c-.25 0-.499218.100782-.699218.300782-.4.4-.4 1.00039 0 1.40039l.699218.699219c.4.4 1.000391.4 1.400391 0s.4-1.000391 0-1.400391l-.699219-.699218c-.2-.2-.451172-.300782-.701172-.300782zm-7.099609 2.900391c-.6 0-1 .4-1 1v1c0 .6.4 1 1 1s1-.4 1-1v-1c0-.6-.4-1-1-1z" />
      )
  }
}

export const Icon: FunctionComponent<Props> = ({
  color,
  css,
  icon,
  onClick,
  size = 'small'
}) => {
  const [{ theme }] = useAuth()

  return (
    <Svg
      css={css as Record<string, unknown>}
      fill={color ?? theme === 'dark' ? '#fff' : '#000'}
      onClick={onClick}
      size={size}
      viewBox="0 0 24 24">
      {getIcon(icon)}
    </Svg>
  )
}
